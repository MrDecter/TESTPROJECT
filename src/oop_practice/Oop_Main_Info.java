package oop_practice;

/**
 * ООП - это подход к разработке приложений с помощью классов и объектов.
 * Класс - это шаблонная конструкция, которая позволяет описать в программе объект, его свойства и поведение.
 * Объект - это сгруппированные вместе данные и методы для того, чтобы эти данные обрабатывать.
 * Методы - это функции, описанные внутри объекта или класса.
 * Атрибуты - это конкретные характеристики объекта
 *
 * ---КЛЮЧЕВЫЕ ПРИНЦИПЫ---
 * Инкапсуляция - Принцип гласи, что вся важная информация, необходимая для работы объекта,
 * в нем же и хранится. И только определенные данные доступны для внешних функций объекта.
 *
 * Наследование - Основная суть взаимоотношений между классами и объектами. Что бы избежать
 * кучу одинаковых объектов и классов, можно создать класс над классами с более общими характеристиками и функциями.
 * После чего наследовать от него те или иные возможности.
 *
 * Абстракция - Каждый верхний слой на дъектом\классом более абстрактный чем его дочерний элемент.
 * Абстрактные классы позволяют создавать все более конкретные классы и вытекающие из них объекты, не описывая
 * их реализацию функций заранее, создавая шаблон для дальнейших настроек.
 *
 * Полиморфизм - позволяет с помощью идентичных методов обрабатывать разные типы данных, например двухзначные числа
 * и числа с плавающей точкой. Так же возможность переопределять методы в дочерних класса для обработки других
 * видов данных или выполнение дополнительных действий при вызове анологичного метода.
 *
 * */
public class Oop_Main_Info {
}
